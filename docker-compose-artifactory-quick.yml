services:
  # JFrog Artifactory OSS - Ultra-fast startup with pre-generated master key
  artifactory:
    image: releases-docker.jfrog.io/jfrog/artifactory-oss:latest
    container_name: release-monitor-artifactory-quick
    ports:
      - "8081:8081"     # Artifactory UI and API port
    environment:
      # Minimal JVM settings for development
      JF_SHARED_JAVA_XMS: 256m
      JF_SHARED_JAVA_XMX: 1g
      # Use embedded Derby database
      JF_SHARED_DATABASE_TYPE: derby
      # Artifactory home directory
      ARTIFACTORY_HOME: /var/opt/jfrog/artifactory
      # Disable HA and clustering features
      JF_SHARED_NODE_HAENABLED: false
      # Reduce logging for faster startup
      JF_ROUTER_LOGGING_LEVEL: WARN
      # Disable unnecessary features for development
      JF_ACCESS_JFCONFIG_ENABLED: false
      JF_SHARED_RESTRICTEDMODE_ENABLED: false
      # Speed up initialization
      SKIP_WAIT_FOR_EXTERNAL_DB: true
    volumes:
      - artifactory-quick-data:/var/opt/jfrog/artifactory
    ulimits:
      nproc: 32768
      nofile:
        soft: 16384
        hard: 32768
    # Faster health check
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/artifactory/webapp/ || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 20
      start_period: 120s  # Should be much faster with pre-generated key
    # Memory limit for development
    mem_limit: 1.5g
    cpus: 2.0
    restart: unless-stopped

  # Setup helper that pre-generates master key
  setup-master-key:
    image: alpine:latest
    container_name: artifactory-key-setup
    volumes:
      - artifactory-quick-data:/var/opt/jfrog/artifactory
    entrypoint: >
      /bin/sh -c "
      echo '🔑 Pre-generating master key for faster startup...';
      
      # Install openssl
      apk add --no-cache openssl;
      
      # Create security directory
      mkdir -p /var/opt/jfrog/artifactory/etc/security;
      
      # Generate master key if it doesn't exist
      if [ ! -f /var/opt/jfrog/artifactory/etc/security/master.key ]; then
        echo '📝 Generating master key...';
        openssl rand -hex 16 > /var/opt/jfrog/artifactory/etc/security/master.key;
        echo '✅ Master key generated';
      else
        echo '✅ Master key already exists';
      fi;
      
      # Set permissions (UID 1030 is artifactory user in container)
      chown -R 1030:1030 /var/opt/jfrog/artifactory/etc/security;
      chmod 750 /var/opt/jfrog/artifactory/etc/security;
      chmod 640 /var/opt/jfrog/artifactory/etc/security/master.key;
      
      echo '🎉 Setup complete! Artifactory should start much faster now.';
      "

  # Status checker
  quick-status:
    image: curlimages/curl:latest
    container_name: artifactory-quick-status
    depends_on:
      artifactory:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c '
      echo "🚀 Artifactory Quick Start Complete!";
      echo "";
      echo "✅ Status: Ready for setup";
      echo "🌐 URL: http://localhost:8081";
      echo "🔑 Login: admin / password";
      echo "";
      echo "📋 Quick Setup:";
      echo "1. Visit http://localhost:8081";
      echo "2. Complete setup wizard";
      echo "3. Create repository: generic-releases";
      echo "4. Generate API key";
      echo "";
      echo "🔧 Environment Variables:";
      echo "  export ARTIFACTORY_URL=\"http://localhost:8081/artifactory\"";
      echo "  export ARTIFACTORY_REPOSITORY=\"generic-releases\"";
      echo "  export ARTIFACTORY_API_KEY=\"your-api-key\"";
      echo "";
      echo "⚡ This version should start in 1-2 minutes vs 5-10 minutes!";
      '

volumes:
  artifactory-quick-data:
    driver: local

# =============================================================================
# Ultra-Fast Artifactory Setup
# =============================================================================
#
# This version pre-generates the master key to eliminate the longest part
# of Artifactory startup (master key generation).
#
# Usage:
#   docker-compose -f docker-compose-artifactory-quick.yml up -d
#
# Expected startup time: 1-2 minutes instead of 5-10 minutes
#
# Clean up:
#   docker-compose -f docker-compose-artifactory-quick.yml down -v
#
# =============================================================================